task_name: reorientation
wandb: True
# relative path to the root of the project
# add cluster_root as prefix to be absolute path on cluster
data_root: data/
seed: 303049
model: Reori_MLP
short_push: True
model_path: ""

data:
  state_dim: 8 # 4*2
  action_dim: 4 # x1,y1,x2,y2
  # obj_size: 30
  # pusher_size: [90, 5]
  # num_episodes: 32000 # 64000
  num_workers: 10
  # episode_length: 12
  training: True # determine the random seed to generate data
  saving: True # save the data
  visualizing: False # visualize the simulation
  gif: False # generate gif
  scale: 0.01 # normalize the data, (x,y)/scale
  # use for hard negative mining
  weight_factor: 0.1 # weight the data in the loss function, exp(w*diff)
  weight_ub: 16 # exp(w*diff)<=weight_ub
  hn_mode: "weight" # "weight" or "add"
  hn_pick_mode: "threshold" # "threshold" or "percentage"
  hn_th: 0.15 # with hn_pick_mode. threshold: pick error>=hn_th, percentage: pick top hn_th of the data

real_exp:
  enable: False
  object_path: real_exp/object/box.obj

train:
  reset_mask_prob_after_prune: True
  enhance_method: "hn" #  "diff" or "hn"
  train_valid_ratio: 0.9
  model_param:
    neighbor_radius: 0.1
    nf_particle: 128
    nf_relation: 128
    layers: 1 # at least 0
  architecture: [96, 192, 192, 96] # specifies the layers and the hidden units in each layer, 576 in total
  n_history: 1
  n_rollout: 9 # 14 # 7 # 3 # 6
  n_rollout_valid: 7 # 3 # 6
  noise: 0.005 # std of the Gaussian noise to training data
  gumbel: false
  gumbel_settings:
    temperature: 0.5
    hard: True
  robust: false
  robust_settings:
    epsilon: 0.002
    alpha: 0.001
    iters: 3
  lr: 0.001
  lr_params:
    adam_beta1: 0.9
  lr_scheduler:
    type: "CosineAnnealingLR"
    enabled: True
  n_epoch_initial: 20
  n_epoch_prune: 8
  batch_size: 256
  num_workers: 8
  lam_l1_reg: 1.0e-3 # 2.0e-4 # l1 regularization
  use_sp_loss: True
  minimize_ID: True
  ID_loss_weight: 0.005
  lam_sp_loss: 1.0e-3
  interval_loss_ratio: 0
  online_training:
    enable: True
    sample_data_per_epoch: 2 # every epoch, sample data 
    num_episodes: 3000
planning:
  plot_only: False
  horizon: 2
  n_act_step: 1 # number of steps to act after each planning call
  n_sim_step: 25
  num_test: 5
  open_loop: True
  action_bound: [1, 1, 0.2] # 0.01 # dx/scale, dy/scale, theta
  pusher_lo: [-0.25, 0.05, 0.] # x/scale, y/scale, theta
  pusher_hi: [0, 0.03, 6.28] # x/scale, y/scale, theta (2pi/0.314 * 0.01 rad)
  timeout: 90
  device: "cuda"
  reload: True
  method_types: ['MPPI', ]
  # force_method_types: ['CROWN']
  force_method_types: []
  abcrown: crown_configs/pushing_rope/planning.yaml
  abcrown_verbose: true # to get feasible solution in every iteration, only enable when open loop
  use_empirical_bounds: false
  enable_ub: true
  model: 'before'
  only_final_cost: True
  fixed_horizon: false
  use_prev_sol: false
  warm_start_from_sampling: true
  cost_norm: 1
  cost_type: 'abs'
  model_path: None
  cost_mode: 'target' # 'target' or 'abs'
  cost_weight: 2.0
  fix_others: False
  gather_data: False
  # only used for MIP
  # use_cut: False
  # use_cut_threshold: 1.0e-4
  # verify_bounds: False
  # prune_weights: False
  # prune_weights_threshold: 1.0e-6
  # bounds_extension: 1 # increase the bound size during planning, positive value

visualize:
  focus_relu_list: [576, 450, 256, 128, 64, 48, 32, 24, 16]
  # outlier_threshold: 3
  vis_lb: -100
  vis_ub: 250
  exp_dir: "closed_loop_planning_6_30"

training: True # if not training, will disable Gumbel
log:
  log_per_iter: 200
# verifier:
#   num_tests: 5
#   error_threshold: 1.0e-3

# evaluate:
#   model_name: 'round_0_best_valid_model.pth' #'best_valid_model_model.pth', compression_round_3_model.pth
#   num_episodes_video: 1 # how many episodes in the generated video
#   visualize_dynamics_model_times: 5 # how many times to visualize
#   visualize_dynamics_model_horizon: 50 # how many steps to visualize
#   evaluate_dynamics_model_steps: 20 # how many steps to evaluate
#   evaluate_dynamics_model_rollout_times: 10 # how many times to evaluate dynamics model rollout times
#   eval_prune_baseline: False

# lr_scheduler:
#     type: "ReduceLROnPlateau"
#     enabled: True
#     factor: 0.3
#     patience: 3
#     threshold: 1.0e-4
#     threshold_mode: 'rel'
#     cooldown: 0
#     min_lr: 0
#     eps: 1e-08
